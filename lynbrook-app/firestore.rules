rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    match /{document=**} {
      allow read: if request.auth.uid != null;
      allow write: if false;
    }
    
    // Announcements
    match /announcements/{announcementId} {
    	allow create: if request.auth.uid != null;
      allow update, delete: if request.auth.uid in get(resource.data.from).data.admins;
    }
    
    match /announcements/{announcementId}/polls/{pollId} {
    	allow read, write: if request.auth.uid != null;
    }
    
    // Authors
    match /authors/{authorId} {
      allow update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.superuser || request.auth.uid in resource.data.admins;
      allow create, delete: if false;
    }
    
    // Events
    match /events/{eventId} {
    	allow write: if request.auth.uid != null;
      // allow write: if request.auth.uid in get(/databases/$(database)/documents/authors/asb).data.admins;
    }
    
    // Prizes
    match /events/{eventId} {
      allow write: if request.auth.uid in get(/databases/$(database)/documents/authors/asb).data.admins;
    }

    // Private user profiles
    match /users/{userId} {
      allow update, delete: if request.auth.uid == userId;
      allow create: if request.auth.uid != null
    }
  }
}